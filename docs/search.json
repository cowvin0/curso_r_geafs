[
  {
    "objectID": "gabriel_curso_r.html#o-que-são-pacotes-1",
    "href": "gabriel_curso_r.html#o-que-são-pacotes-1",
    "title": "Introdução à linguagem de programação R",
    "section": "O que são pacotes",
    "text": "O que são pacotes\nA linguagem base do R vem com inúmeras funções implementadas para operações numéricas, análise estatística, gráficos para visualização e muitos outros. Essas funções da própria linguagem são conhecidas como built-in. No entanto, é possível utilizar funcionalidades implementadas por outros usuários da linguagem. Para isso, podemos instalar pacotes.\nOs pacotes em R e muitas outras linguagens são um conjunto de funcionalidades implementadas por usuários da própria linguagem. Por exemplo, um dos pacotes mais conhecidos para visualização de gráficos é o ggplot2, que foi implementada por Hadley Wickham. Este pacote implementa uma série de funções para visualização estatística, permitindo criar Box-plots, gráficos de dispersão, gráficos de linhas e uma miríade de outros gráficos."
  },
  {
    "objectID": "gabriel_curso_r.html#como-instalar-pacotes-1",
    "href": "gabriel_curso_r.html#como-instalar-pacotes-1",
    "title": "Introdução à linguagem de programação R",
    "section": "Como instalar pacotes",
    "text": "Como instalar pacotes\nExiste uma função principal para instalação de pacotes: install.packages. Você pode verificar sua documentação digitando ?install.packages1 no seu console do R. Dessa forma, podemos instalar o pacote ggplot2 da seguinte forma:\n\ninstall.packages(\"ggplot2\")\n\nAgora que o pacote foi instalado, você pode utilizar suas funções chamando ele com a função library. A função library carrega todos as funções implementadas num pacote. Assim, temos:\n\nlibrary(ggplot2)\n\nObs: Utilizar ? antes do nome de uma função no R é uma forma de olhar a documentação de uma função e obter informações sobre sua funcionalidade. Caso você queira pesquisar afundo no sistema de ajuda do R, você pode utilizar ?? antes do nome de uma função e irá procurar em diferentes pacotes funções com aquele mesmo nome. A função help é o mesmo que utilizar ?."
  },
  {
    "objectID": "gabriel_curso_r.html#operações-matemáticas-básicas-1",
    "href": "gabriel_curso_r.html#operações-matemáticas-básicas-1",
    "title": "Introdução à linguagem de programação R",
    "section": "Operações matemáticas básicas",
    "text": "Operações matemáticas básicas\nA linguagem de programação R tem implementado 7 operações matemáticas básicas implementadas na linguagem, além de suportar uma grande quantidade de funções matemáticas que permitem realizar operações mais complexas. Por exemplo, caso queira calcular o \\(\\ln\\left(10\\right)\\), podemos utilizar a função \\(\\log\\left(\\right)\\). Veja um exemplo:\n\nlog(10)\n\n[1] 2.302585\n\n\nCom a função \\(\\exp\\left(\\right)\\) é possível calcular a função exponencial \\(\\left(e^x\\right)\\). Assim, calculando \\(e^2\\):\n\nexp(2)\n\n[1] 7.389056"
  },
  {
    "objectID": "gabriel_curso_r.html#operações-matemáticas-básicas-2",
    "href": "gabriel_curso_r.html#operações-matemáticas-básicas-2",
    "title": "Introdução à linguagem de programação R",
    "section": "Operações matemáticas básicas",
    "text": "Operações matemáticas básicas\n\nResumo das operações matemáticas\n\n\nOperação\nNome\nExemplo\n\n\n\n\n+\nAdição\nx + y\n\n\n-\nSubtração\nx - y\n\n\n*\nMultiplicação\nx * y\n\n\n/\nDivisão\nx / y\n\n\n^\nExpoente\nx ^ y\n\n\n%%\nResto da divisão (Módulo)\nx %% y\n\n\n%/%\nDivisão inteira\nx %/% y"
  },
  {
    "objectID": "gabriel_curso_r.html#assinando-objetos",
    "href": "gabriel_curso_r.html#assinando-objetos",
    "title": "Introdução à linguagem de programação R",
    "section": "Assinando objetos",
    "text": "Assinando objetos\nCaso você queira guardar valores ou diferentes itens na linguagem R, você pode utilizar o sinal de = ou &lt;-. Assim, essa é podemos atribuir valores para dois objetos, y e x:\n\nx &lt;- 3\ny &lt;- 5\n\nAssim, o objeto \\(x\\) e \\(y\\) tem os valores 3 e 5 atribuído a eles, respectivamente. Agora é possível fazer cálculos matemáticos:\n\nx + y\n\n[1] 8\n\n\nÉ possível utilizar os outros dois objetos para criar outro a partir deles:\n\nz &lt;- x / y\nz\n\n[1] 0.6"
  },
  {
    "objectID": "gabriel_curso_r.html#vetores-atômicos",
    "href": "gabriel_curso_r.html#vetores-atômicos",
    "title": "Introdução à linguagem de programação R",
    "section": "Vetores Atômicos",
    "text": "Vetores Atômicos\nVetores atômicos é uma das estruturas mais amplamente utilizadas no R. Vetor atômico é uma sequência de elementos do mesmo tipo (homogêneo), como números, caracteres, valores lógicos ou outro tipo de elemento. Além disso, os vetores atômicos permitem operações elemento a elemento, o que torna o código mais conciso e mais fácil de ler."
  },
  {
    "objectID": "gabriel_curso_r.html#como-criar-um-vetor-atômico",
    "href": "gabriel_curso_r.html#como-criar-um-vetor-atômico",
    "title": "Introdução à linguagem de programação R",
    "section": "Como criar um vetor atômico",
    "text": "Como criar um vetor atômico\nOs vetores atômicos podem ser criados utilizando a função c(). Por exemplo, você pode criar um objeto chamado meu vetor que tem como atributo um vetor atômico:\n\nmeu_vetor &lt;- c(1, 3, 1, 42)\nmeu_vetor\n\n[1]  1  3  1 42\n\n\nVetores atômico podem ser cálculos ou diferentes valores atribuídos a objetos, incluindo vetores atômicos:\n\nvalorqualquer &lt;- 5\nmeu_vetor2 &lt;- c(3, -3, 2, 3.45, 1e+03, 64^0.5, 2+(3-1.1)/9.44, valorqualquer)\nmeu_vetor2\n\n[1]    3.000000   -3.000000    2.000000    3.450000 1000.000000    8.000000\n[7]    2.201271    5.000000\n\n\nVocê pode também juntar vetores:\n\nvetores_juntos &lt;- c(meu_vetor, meu_vetor2)"
  },
  {
    "objectID": "gabriel_curso_r.html#extraindo-valores-de-um-vetor-atômico",
    "href": "gabriel_curso_r.html#extraindo-valores-de-um-vetor-atômico",
    "title": "Introdução à linguagem de programação R",
    "section": "Extraindo valores de um vetor atômico",
    "text": "Extraindo valores de um vetor atômico\nVocê pode ter notado valores entre colchetes na saída do código que aparecem dessa forma [i], em que i é um número inteiro. Essa notação indica a posição dos elementos de um vetor atômico. Assim, considerando o vetor meu_vetor2, podemos selecionar o segundo elemento da seguinte forma:\n\nmeu_vetor2[2]\n\n[1] -3\n\n\nCaso não saibamos a quantidade de elementos num vetor e queira obter a quantidade total de elementos num vetor atômico, podemos utilizar a função length():\n\nlength(meu_vetor2)\n\n[1] 8"
  },
  {
    "objectID": "gabriel_curso_r.html#extraindo-valores-de-um-vetor-atômico-1",
    "href": "gabriel_curso_r.html#extraindo-valores-de-um-vetor-atômico-1",
    "title": "Introdução à linguagem de programação R",
    "section": "Extraindo valores de um vetor atômico",
    "text": "Extraindo valores de um vetor atômico\nDessa forma, podemos selecionar o último elemento do vetor meu_vetor2 utilizando a função length:\n\nmeu_vetor2[length(meu_vetor2)]\n\n[1] 5\n\n\nÉ possível também selecionar todos os elementos de um vetor atômico, exceto um. Veja um exemplo selecionando todos os valores do vetor meu_vetor2, exceto o último:\n\nmeu_vetor2[-length(meu_vetor2)]\n\n[1]    3.000000   -3.000000    2.000000    3.450000 1000.000000    8.000000\n[7]    2.201271"
  },
  {
    "objectID": "gabriel_curso_r.html#extraindo-valores-de-um-vetor-atômico-2",
    "href": "gabriel_curso_r.html#extraindo-valores-de-um-vetor-atômico-2",
    "title": "Introdução à linguagem de programação R",
    "section": "Extraindo valores de um vetor atômico",
    "text": "Extraindo valores de um vetor atômico\nÉ possível também selecionar mais de um elemento utilizando sequências que pode ser criado com :. Podemos criar uma sequência de 2 a 5:\n\n2:5\n\n[1] 2 3 4 5\n\n\nAssim selecionando os valores de 2 a 5 do vetor meu_vetor2:\n\nmeu_vetor2[2:5]\n\n[1]   -3.00    2.00    3.45 1000.00\n\n\nOs vetores atômicos também podem ser utilizados para selecionar elementos. Selecionando o quarto e sexto elemento:\n\nmeu_vetor2[c(4, 6)]\n\n[1] 3.45 8.00\n\n\nRemovendo o quarto e sexto elemento:\n\nmeu_vetor2[-c(4, 6)]\n\n[1]    3.000000   -3.000000    2.000000 1000.000000    2.201271    5.000000"
  },
  {
    "objectID": "gabriel_curso_r.html#listas",
    "href": "gabriel_curso_r.html#listas",
    "title": "Introdução à linguagem de programação R",
    "section": "Listas",
    "text": "Listas"
  },
  {
    "objectID": "gabriel_curso_r.html#dataframes",
    "href": "gabriel_curso_r.html#dataframes",
    "title": "Introdução à linguagem de programação R",
    "section": "Dataframes",
    "text": "Dataframes"
  }
]